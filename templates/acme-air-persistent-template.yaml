kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: acmeair-persistent-template
  namespace: openshift
  annotations:
    openshift.io/display-name: Acme Air (Persistent)
    openshift.io/provider-display-name: 'IBM Turkey'
    description: 'Microservices application for fictional Airline Company "Acme Air".'
    openshift.io/documentation-url: >-
      'https://github.com/yigitpolat/acmeair-mainservice-java'
      Don't forget to add below line to /etc/hosts flightservice
      172.16.22.164    acmeair.apps.test.cluster.tr.com
    iconClass: 'icon-java'
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: acmeair-mainservice
      labels:
        app.kubernetes.io/part-of: main-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: acmeair-main-deployment
      template:
        metadata:
          labels:
            name: acmeair-main-deployment
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9080"
        spec:
          containers:
          - name: acmeair-mainservice-java
            image: docker.io/yigitpolat/acmeair-mainservice-java:latest
            ports:
            - containerPort: 9080
            - containerPort: 9443
            imagePullPolicy: Always
            resources:
              limits:
                cpu: 400m
              requests:
                cpu: 100m
            env:
            - name: USERNAME
              value: admin
            - name: PASSWORD
              value: password
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: acmeair-authservice
      labels:
        app.kubernetes.io/part-of: auth-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: acmeair-auth-deployment
      template:
        metadata:
          labels:
            name: acmeair-auth-deployment
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9080"
        spec:
          containers:
          - name: acmeair-authservice-java
            image: docker.io/yigitpolat/acmeair-authservice-java:latest
            ports:
              - containerPort: 9080
              - containerPort: 9443
            imagePullPolicy: Always
            resources:
              limits:
                cpu: 400m
              requests:
                cpu: 100m
            env:
            - name: USERNAME
              value: admin
            - name: PASSWORD
              value: password
            - name: ACMEAIR_STACKAA_CUSTOMER_URL
              value: "http://acmeair-customer-service:9080/customer"
            readinessProbe:
              httpGet:
                path: /health
                port: 9080
              initialDelaySeconds: 10
              periodSeconds: 5
            livenessProbe:
              httpGet:
                path: /health
                port: 9080
              initialDelaySeconds: 120
              periodSeconds: 15
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: acmeair-customerservice
      labels:
        app.kubernetes.io/part-of: customer-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: acmeair-customer-deployment
      template:
        metadata:
          labels:
            name: acmeair-customer-deployment
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9080"
        spec:
          containers:
          - name: acmeair-customerservice-java
            image: docker.io/yigitpolat/acmeair-customerservice-java:latest
            ports:
              - containerPort: 9080
              - containerPort: 9443
            imagePullPolicy: Always
            resources:
              limits:
                cpu: 400m
              requests:
                cpu: 100m
            env:
            - name: USERNAME
              value: admin
            - name: PASSWORD
              value: password
            - name: MONGO_HOST
              value: acmeair-customer-db
            - name: SECURE_SERVICE_CALLS
              value: 'true'
            - name: ACMEAIR_STACKAA_AUTH_URL
              value: "http://acmeair-auth-service:9080/auth"
            readinessProbe:
              httpGet:
                path: /health
                port: 9080
              initialDelaySeconds: 10
              periodSeconds: 5
            livenessProbe:
              httpGet:
                path: /health
                port: 9080
              initialDelaySeconds: 120
              periodSeconds: 15  
  - apiVersion: apps/v1
    kind: Deployment
    metadata:      
      name: acmeair-customer-db
      labels:
        app.kubernetes.io/part-of: customer-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: acmeair-customer-db
      strategy: {}
      template:
        metadata:
          labels:
            name: acmeair-customer-db
        spec:
          volumes:
            - name: acmeair-customer-db-1
              persistentVolumeClaim:
                claimName: acmeair-customer-db-1
            - name: acmeair-customer-db-2
              persistentVolumeClaim:
                claimName: acmeair-customer-db-2
          containers:
          - image: mongo:latest
            name: acmeair-customer-db
            ports:
            - containerPort: 27017
              protocol: TCP
            resources: {}
            volumeMounts:
              - name: acmeair-customer-db-1
                mountPath: /data/configdb
              - name: acmeair-customer-db-2
                mountPath: /data/db
          restartPolicy: Always
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: acmeair-flightservice
      labels:
        app.kubernetes.io/part-of: flight-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: acmeair-flight-deployment
      template:
        metadata:
          labels:
            name: acmeair-flight-deployment
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9080"
        spec:
          containers:
          - name: acmeair-flightservice-java
            image: docker.io/yigitpolat/acmeair-flightservice-java:latest
            ports:
              - containerPort: 9080
              - containerPort: 9443
            imagePullPolicy: Always
            resources:
              limits:
                cpu: 400m
              requests:
                cpu: 100m
            env:
            - name: USERNAME
              value: admin
            - name: PASSWORD
              value: password
            - name: MONGO_HOST
              value: acmeair-flight-db
            - name: SECURE_SERVICE_CALLS
              value: 'true'
            readinessProbe:
              httpGet:
                path: /health
                port: 9080
              initialDelaySeconds: 10
              periodSeconds: 5
            livenessProbe:
              httpGet:
                path: /health
                port: 9080
              initialDelaySeconds: 120
              periodSeconds: 15
  - apiVersion: apps/v1
    kind: Deployment
    metadata:     
      name: acmeair-flight-db
      labels:
        app.kubernetes.io/part-of: flight-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: acmeair-flight-db
      strategy: {}
      template:
        metadata:
          labels:
            name: acmeair-flight-db
        spec:
          volumes:
            - name: acmeair-flight-db-1
              persistentVolumeClaim:
                claimName: acmeair-flight-db-1
            - name: acmeair-flight-db-2
              persistentVolumeClaim:
                claimName: acmeair-flight-db-2
          containers:
          - image: mongo:latest
            name: acmeair-flight-db
            ports:
            - containerPort: 27017
              protocol: TCP
            resources: {}
            volumeMounts:
              - name: acmeair-flight-db-1
                mountPath: /data/configdb
              - name: acmeair-flight-db-2
                mountPath: /data/db
          restartPolicy: Always
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: acmeair-bookingservice
      labels:
        app.kubernetes.io/part-of: booking-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: acmeair-booking-deployment
      template:
        metadata:
          labels:
            name: acmeair-booking-deployment
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9080"
        spec:
          containers:
          - name: acmeair-bookingservice-java
            image: docker.io/yigitpolat/acmeair-bookingservice-java:latest
            ports:
              - containerPort: 9080
              - containerPort: 9443
            imagePullPolicy: Always
            resources:
              limits:
                cpu: 400m
              requests:
                cpu: 100m
            env:
            - name: USERNAME
              value: admin
            - name: PASSWORD
              value: password
            - name: MONGO_HOST
              value: acmeair-booking-db
            - name: ACMEAIR_STACKAA_AUTH_URL
              value: "http://acmeair-auth-service:9080/auth"
            - name: ACMEAIR_STACKAA_CUSTOMER_URL
              value: "http://acmeair-customer-service:9080/customer"
            - name: ACMEAIR_STACKAA_FLIGHT_URL
              value: "http://acmeair-flight-service:9080/flight"
            readinessProbe:
              httpGet:
                path: /health
                port: 9080
              initialDelaySeconds: 20
              periodSeconds: 5
            livenessProbe:
              httpGet:
                path: /health
                port: 9080
              initialDelaySeconds: 120
              periodSeconds: 15
  - apiVersion: apps/v1
    kind: Deployment
    metadata:    
      name: acmeair-booking-db
      labels:
        app.kubernetes.io/part-of: booking-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          name: acmeair-booking-db
      strategy: {}
      template:
        metadata: 
          labels:
            name: acmeair-booking-db
        spec:
          volumes:
            - name: acmeair-booking-db-1
              persistentVolumeClaim:
                claimName: acmeair-booking-db-1
            - name: acmeair-booking-db-2
              persistentVolumeClaim:
                claimName: acmeair-booking-db-2
          containers:
          - image: mongo:latest 
            name: acmeair-booking-db
            ports:
            - containerPort: 27017
              protocol: TCP
            resources: {}
            volumeMounts:
              - name: acmeair-booking-db-1
                mountPath: /data/configdb
              - name: acmeair-booking-db-2
                mountPath: /data/db
          restartPolicy: Always
  - apiVersion: v1
    kind: Service
    metadata:
      name: acmeair-main-service
      labels:
        app.kubernetes.io/part-of: main-service
    spec:
      ports:
        - port: 9080
      selector:
        name: acmeair-main-deployment
  - apiVersion: v1
    kind: Service
    metadata:
      name: acmeair-auth-service
      labels:
        app.kubernetes.io/part-of: auth-service
    spec:
      ports:
        - port: 9080
      selector:
        name: acmeair-auth-deployment
  - apiVersion: v1
    kind: Service
    metadata:
      name: acmeair-customer-service
      labels:
        app.kubernetes.io/part-of: customer-service
    spec:
      ports:
        - port: 9080
      selector:
        name: acmeair-customer-deployment
  - apiVersion: v1
    kind: Service
    metadata:     
      name: acmeair-customer-db
      labels:
        service: acmeair-customer-db
        app.kubernetes.io/part-of: customer-service
    spec:
      ports:
      - name: "27017"
        port: 27017
        protocol: TCP
        targetPort: 27017
      selector:
        name: acmeair-customer-db
  - apiVersion: v1
    kind: Service
    metadata:
      name: acmeair-flight-service
      labels:
        app.kubernetes.io/part-of: flight-service
    spec:
      ports:
        - port: 9080
      selector:
        name: acmeair-flight-deployment
  - apiVersion: v1
    kind: Service
    metadata:      
      name: acmeair-flight-db
      labels:
        service: acmeair-flight-db
        app.kubernetes.io/part-of: flight-service
    spec:
      ports:
      - name: "27017"
        port: 27017
        protocol: TCP
        targetPort: 27017
      selector:
        name: acmeair-flight-db
  - apiVersion: v1
    kind: Service
    metadata:
      name: acmeair-booking-service
      labels:
        app.kubernetes.io/part-of: booking-service
    spec:
      ports:
        - port: 9080
      selector:
        name: acmeair-booking-deployment
  - apiVersion: v1
    kind: Service
    metadata:     
      name: acmeair-booking-db
      labels:
        service: acmeair-booking-db
        app.kubernetes.io/part-of: booking-service
    spec:
      ports:
      - name: "27017"
        port: 27017
        protocol: TCP
        targetPort: 27017
      selector:
        name: acmeair-booking-db
  - apiVersion: v1
    kind: Route
    metadata:
      name: acmeair-main-route
      labels:
        app.kubernetes.io/part-of: main-service
    spec:
      host: acmeair.${DOMAIN}
      path: /acmeair
      to:
        kind: Service
        name: acmeair-main-service
      port:
        targetPort: 9080
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None
  - apiVersion: v1
    kind: Route
    metadata:
      name: acmeair-auth-route
      labels:
        app.kubernetes.io/part-of: auth-service
    spec:
      host: acmeair.${DOMAIN}
      path: /auth
      to:
        kind: Service
        name: acmeair-auth-service
      port:
        targetPort: 9080
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None
  - apiVersion: v1
    kind: Route
    metadata:
      name: acmeair-customer-route
      labels:
        app.kubernetes.io/part-of: customer-service
    spec:
      host: acmeair.${DOMAIN}
      path: /customer
      to:
        kind: Service
        name: acmeair-customer-service
      port:
        targetPort: 9080
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None
  - apiVersion: v1
    kind: Route
    metadata:
      name: acmeair-flight-route
      labels:
        app.kubernetes.io/part-of: flight-service
    spec:
      host: acmeair.${DOMAIN}
      path: /flight
      to:
        kind: Service
        name: acmeair-flight-service
      port:
        targetPort: 9080
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None
  - apiVersion: v1
    kind: Route
    metadata:
      name: acmeair-booking-route
      labels:
        app.kubernetes.io/part-of: booking-service
    spec:
      host: acmeair.${DOMAIN}
      path: /booking
      to:
        kind: Service
        name: acmeair-booking-service
      port:
        targetPort: 9080
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None
  - kind: PersistentVolumeClaim
    metadata:
      name: acmeair-customer-db-1
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
  - kind: PersistentVolumeClaim
    metadata:
      name: acmeair-customer-db-2
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
  - kind: PersistentVolumeClaim
    metadata:
      name: acmeair-flight-db-1
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
  - kind: PersistentVolumeClaim
    metadata:
      name: acmeair-flight-db-2
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
  - kind: PersistentVolumeClaim
    metadata:
      name: acmeair-booking-db-1
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
  - kind: PersistentVolumeClaim
    metadata:
      name: acmeair-booking-db-2
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
parameters:
  - name: DOMAIN
    displayName: Domain Name
    description: Cluster's wildcard domain
    value: "apps.test.cluster.tr.com"
    required: true
labels:
  app: acmeair-persistent
  template: acmeair-persistent
